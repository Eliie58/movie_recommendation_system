---
version: '3'
services:
  api:
    build:
      context: ./api
      dockerfile: FastApiDockerfile
    ports:
      - "80:80"
    volumes:
      - models:/models    
    environment:
      - DATABASE_URL=postgresql://fastapi:fastapi@postgres:5432/movies
    depends_on:
      - postgres
      - model
    links:
      - postgres:postgres
  postgres:
    image: postgres:14.5-alpine
    restart: always
    environment:
      POSTGRES_USER: fastapi
      POSTGRES_PASSWORD: fastapi
      POSTGRES_DB: fastapi
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
  streamlit:
    build:
      context:  ./streamlit
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      - API_URL=http://api:80
      - BASE_URL=http://localhost:8501
    ports:
      - 8501:8501
    depends_on:
      - postgres
  model:
    build:
      context: ./model
      dockerfile: Dockerfile
    volumes:
      - models:/model/models
      - mlruns:/tmp
    ports:
      - 5000:5000
  airflow:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    ports:
      - 9091:9091
    environment:
      AIRFLOW__METRICS__STATSD_ON: 'true'
      AIRFLOW__METRICS__STATSD_HOST: statsd-exporter
      AIRFLOW__METRICS__STATSD_PORT: 8125
      AIRFLOW__METRICS__STATSD_PREFIX: airflow
      B2B_FOLDER: data/b2b_input
      VALIDATION_FOLDER: data/validation_input
      PREDICTION_FOLDER: data/prediction_input
      REJECT_FOLDER: data/rejected
      OUTPUT_FOLDER: data/output
      API_URL: http://api:80
  statsd-exporter:
    image: prom/statsd-exporter
    container_name: airflow-statsd-exporter
    command: "--statsd.listen-udp=:8125 --web.listen-address=:9102"
    ports:
        - 9102:9102
        - 8125:8125/udp
    volumes:
        - "./statsd-exporter/statsd_mapping.yml:/tmp/statsd_mapping.yml"
  prometheus:
    image: prom/prometheus
    container_name: airflow-prometheus
    ports:
        - 9090:9090
    volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana:latest
    container_name: airflow-grafana
    environment:
        GF_SECURITY_ADMIN_USER: grafana
        GF_SECURITY_ADMIN_PASSWORD: grafana
        GF_PATHS_PROVISIONING: /grafana/provisioning
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning:/grafana/provisioning

volumes:
  postgres:
  mlruns:
  models: